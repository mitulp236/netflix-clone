[{"/home/mitulp236/Desktop/netflix-clone/src/index.js":"1","/home/mitulp236/Desktop/netflix-clone/src/App.js":"2","/home/mitulp236/Desktop/netflix-clone/src/reportWebVitals.js":"3","/home/mitulp236/Desktop/netflix-clone/src/Row.js":"4","/home/mitulp236/Desktop/netflix-clone/src/requests.js":"5","/home/mitulp236/Desktop/netflix-clone/src/axios.js":"6","/home/mitulp236/Desktop/netflix-clone/src/Banner.js":"7"},{"size":500,"mtime":1608486028038,"results":"8","hashOfConfig":"9"},{"size":876,"mtime":1608573366640,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608486028038,"results":"11","hashOfConfig":"9"},{"size":1029,"mtime":1608571989314,"results":"12","hashOfConfig":"9"},{"size":697,"mtime":1608532096728,"results":"13","hashOfConfig":"9"},{"size":201,"mtime":1608532239045,"results":"14","hashOfConfig":"9"},{"size":1353,"mtime":1608575262028,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"cvzqdq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/mitulp236/Desktop/netflix-clone/src/index.js",[],["33","34"],"/home/mitulp236/Desktop/netflix-clone/src/App.js",[],"/home/mitulp236/Desktop/netflix-clone/src/reportWebVitals.js",[],"/home/mitulp236/Desktop/netflix-clone/src/Row.js",["35"],"import React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"./axios\";\nimport \"./Row.css\";\n\nconst BASE_URL = \"https://image.tmdb.org/t/p/original\";\n\nexport default function Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    console.log(fetchUrl);\n    async function fetchData() {\n      const request = await axiosInstance.get(fetchUrl);\n      console.log(request);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <div className='row'>\n        <h2>{title}</h2>\n        <div className='row_posters'>\n          {movies.map((movie) => (\n            <img\n              key={movie.id}\n              className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n              src={`${BASE_URL}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/mitulp236/Desktop/netflix-clone/src/requests.js",[],"/home/mitulp236/Desktop/netflix-clone/src/axios.js",[],["36","37"],"/home/mitulp236/Desktop/netflix-clone/src/Banner.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":19,"column":6,"nodeType":"44","endLine":19,"endColumn":8,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUrl'. Either include it or remove the dependency array.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [fetchUrl]",{"range":"53","text":"54"},[529,531],"[fetchUrl]"]